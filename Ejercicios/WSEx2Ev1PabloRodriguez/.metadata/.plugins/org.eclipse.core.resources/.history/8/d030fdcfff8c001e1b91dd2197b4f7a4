package pack;
public class Ej1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] arr = {1, 2, 1, 4, 7, 6, 7, 8, 9, 10};
		
		System.out.println("VECTOR:");
		for(int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
		
		//rotar(arr, 3);
		
		System.out.println("VECTOR ROTADO");
		for(int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
		
		duplicados(arr);
		
		System.out.println("VECTOR SIN DUPLICADOS:");
		for(int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
		int[]sub= {1,4,7};
		subsecuencia(arr, sub);
		
		
	}
	
	
		static void rotar(int[]v,int nPosiciones) {
			int aux[]=new int[v.length];
			//lo copio
			for(int i=v.length-1;i>=0;i--) {
			aux[i]=v[i];
			}
			
			for(int i=0;i<aux.length;i++) {
				if(i+nPosiciones<=aux.length-1) {
					v[i+nPosiciones]=aux[i];
				}else {
					v[(i+nPosiciones)%aux.length]=aux[i];
		}
	}
}

		
	/*static int duplicados(int[]v) {
		int numElimnados=0;
		boolean repetido=false;
		int aux[]=new int[v.length];
		
		int indAux=0,numComprobaciones=0;
		for(int i=0;i<v.length;i++) {
			int indice=i+1;
			while(numComprobaciones<v.length-1 && !repetido) {
				if(v[i]==v[indice]) {
					repetido=true;
					numElimnados++;
				}
				if(!repetido) {
					aux[indAux]=v[i];
					indAux++;
				}
			}
			
			
			
		}
		
		v=aux;
		return numElimnados;
	
	}*/
	
	

	
	
	
	static boolean subsecuencia(int[] v, int[] secuencia) {
    boolean repetido = false;

    for (int i=0;i<= v.length-secuencia.length && !repetido; i++) {
        if (v[i]==secuencia[0]) {
            repetido=true;

            for (int j=1; j<secuencia.length && repetido; j++) {
                if (v[i + j]!=secuencia[j]) {
                    repetido=false;
                }
            }
        }
    }

   return repetido;
}
	
	static int duplicados(int[] v) {
    int numEliminados = 0;
    int[] aux = new int[v.length];
    int indAux = 0;

    for (int i = 0; i < v.length; i++) {
        boolean repetido = false;

        // Verificar si el elemento ya está en el array auxiliar
        for (int j = 0; j < indAux; j++) {
            if (v[i] == aux[j]) {
                repetido = true;
                break;
            }
        }

        // Si no está repetido, agregar al array auxiliar
        if (!repetido) {
            aux[indAux++] = v[i];
        } else {
            numEliminados++;
        }
    }

    // Copiar los elementos únicos de aux a v
    for (int i = 0; i < indAux; i++) {
        v[i] = aux[i];
    }

    return numEliminados;
}



}
